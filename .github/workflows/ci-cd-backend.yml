name: Build and Deploy to Google Cloud Run
 
on:
  # push:
  #  branches: [ main ]
  pull_request:
   branches: [ main ]
 
env:
  PROJECT_ID: ${{ secrets.GCP_PROJECT_ID }}
  SERVICE_NAME: ai-interview-prep-app
  REGION: us-central1
 
jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
 
    steps:
    - name: Checkout code
      uses: actions/checkout@v3
 
    - name: Google Auth
      id: auth
      uses: google-github-actions/auth@v1
      with:
        credentials_json: ${{ secrets.GCP_SA_KEY }}
 
 
    - name: Set up Google Cloud SDK
      uses: google-github-actions/setup-gcloud@v1
      with:
        service_account_key: ${{ secrets.GCP_SA_KEY }}
        project_id: ${{ secrets.GCP_PROJECT_ID }}
 
    - name: Configure Docker to use gcloud
      run: gcloud auth configure-docker
 
    - name: Build Docker image
      run: |
        docker build -t gcr.io/$PROJECT_ID/$SERVICE_NAME:${{ github.sha }} -f backend/Dockerfile .
        docker push gcr.io/$PROJECT_ID/$SERVICE_NAME:${{ github.sha }}
 
    - name: Deploy to Google Cloud Run
      run: |
        gcloud run deploy $SERVICE_NAME \
          --image gcr.io/$PROJECT_ID/$SERVICE_NAME:${{ github.sha }} \
          --platform managed \
          --region $REGION \
          --allow-unauthenticated \
          --port 8000 \
          --set-env-vars="SNOWFLAKE_USER=${{ secrets.SNOWFLAKE_USER }},SNOWFLAKE_PASSWORD=${{ secrets.SNOWFLAKE_PASSWORD }},SNOWFLAKE_ACCOUNT=${{ secrets.SNOWFLAKE_ACCOUNT }},SNOWFLAKE_DATABASE=${{ secrets.SNOWFLAKE_DATABASE }},SNOWFLAKE_SCHEMA=${{ secrets.SNOWFLAKE_SCHEMA }},SNOWFLAKE_WAREHOUSE=${{ secrets.SNOWFLAKE_WAREHOUSE }},SNOWFLAKE_ROLE=${{ secrets.SNOWFLAKE_ROLE }},JWT_SECRET=${{ secrets.JWT_SECRET }},AWS_ACCESS_KEY_ID=${{ secrets.AWS_ACCESS_KEY_ID }},AWS_SECRET_ACCESS_KEY=${{ secrets.AWS_SECRET_ACCESS_KEY }},AWS_REGION=${{ secrets.AWS_REGION }},S3_BUCKET_NAME=${{ secrets.S3_BUCKET_NAME }}, OPENAI_API_KEY=${{ secrets.OPENAI_API_KEY }},TAVILY_API_KEY=${{ secrets.TAVILY_API_KEY }}, PINECONE_API_KEY=${{ secrets.PINECONE_API_KEY }},PINECONE_ENV=${{ secrets.PINECONE_ENV }},INDEX_NAME=${{ secrets.INDEX_NAME }}, PRAW_CLIENT_ID=${{ secrets.PRAW_CLIENT_ID }}, PRAW_CLIENT_SECRET=${{ secrets.PRAW_CLIENT_SECRET }}, PRAW_USER_AGENT=${{ secrets.PRAW_USER_AGENT }}" 


    - name: Show deployed service URL
      run: echo "Service deployed to ${{ steps.deploy.outputs.url }}"